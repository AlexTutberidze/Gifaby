{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luka/Desktop/Code-/Gifaby/src/Gifaby.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { render } from '@testing-library/react';\nimport './gifaby.css';\nimport { user } from './redux/reducers/user';\nimport { Helmet } from 'react-helmet';\nimport newuser from './newuser';\nimport { Modal, Button } from 'react-bootstrap';\nimport Feed from './Feed';\nimport Avatar from '@material-ui/core/Avatar';\nimport firebase from 'firebase';\nimport nickname from './Register';\n\nfunction Home() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user, nickname]);\n  useEffect(() => {\n    firebase.firestore().collection('posts').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allbg\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Gifaby | Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbarh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => firebase.auth().signOut(),\n          className: \"btnoutssd\",\n          variant: \"outline-danger\",\n          children: \"LogOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logoh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Feed\",\n        children: posts.map(({\n          id,\n          post\n        }) => /*#__PURE__*/_jsxDEV(Feed, {\n          username: post.username,\n          description: post.description,\n          imageUrl: post.imageUrl\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"8I8R6aFM8JxXGXoBYoChpiTjqXw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/luka/Desktop/Code-/Gifaby/src/Gifaby.js"],"names":["React","useEffect","useState","render","user","Helmet","newuser","Modal","Button","Feed","Avatar","firebase","nickname","Home","posts","setPosts","setUser","unsubscribe","auth","onAuthStateChanged","authUser","console","log","firestore","collection","onSnapshot","snapshot","docs","map","doc","id","post","data","signOut","username","description","imageUrl"],"mappings":"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","sourcesContent":["import React, {\n    useEffect,\n    useState\n} from 'react'\nimport { render } from '@testing-library/react'\nimport './gifaby.css'\nimport { user } from './redux/reducers/user'\nimport { Helmet } from 'react-helmet'\nimport newuser from './newuser'\nimport { Modal, Button } from 'react-bootstrap'\nimport Feed from './Feed'\nimport Avatar from '@material-ui/core/Avatar'\nimport firebase from 'firebase'\nimport nickname from './Register'\n\n\n\nfunction Home() {\n    \n    const [posts, setPosts] = useState([]);\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        const unsubscribe = firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                console.log(authUser)\n                setUser(authUser)\n            } else {\n                setUser(null)\n            }\n        })\n\n        return () => {\n            unsubscribe();\n        }\n    }, [user, nickname])\n\n    useEffect(() => {\n        firebase.firestore().collection('posts').onSnapshot(snapshot => {\n            setPosts(snapshot.docs.map(doc => ({\n                id: doc.id,\n                post: doc.data()\n            })))\n        })\n    }, [])\n\n    return (\n        <>\n            <div className='allbg' >\n            <Helmet>\n              <title>Gifaby | Home</title>\n            </Helmet>\n            <nav>\n                <div className='navbarh' >\n                    \n                </div>\n                <Button onClick={() => firebase.auth().signOut()} className='btnoutssd' variant='outline-danger' >LogOut</Button>\n                <div className='logoh'></div>\n            </nav>\n                <div className='Feed' >\n                    {\n                        posts.map(({id, post}) => (\n                            <Feed key={id} username={post.username} description={post.description} imageUrl={post.imageUrl} />\n                        ))\n                    }\n                </div>\n                \n            </div>\n        </>\n\n       \n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}